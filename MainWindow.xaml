<Window x:Class="TestingWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestingWPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Window.Resources>
        <CollectionViewSource 
            Source="{Binding Source={x:Static Application.Current}, Path=SkillsList}" 
            x:Key="ListOfSkills"/>

        <Style x:Key="BtnSkill" TargetType="Button">
            <Setter Property="Background" Value="DarkTurquoise"/>
            <Setter Property="Foreground" Value="LightYellow"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0, 0, 20, 0"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
    </Window.Resources>

    <Grid x:Name="UILayout">
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <ListBox HorizontalAlignment="Center" Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Width="300"
                 ItemsSource="{Binding Source={StaticResource ListOfSkills}}">
<!--
            <ItemsControl ItemsSource="{Binding Source={StaticResource ListOfSkills}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="2"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Path=Name}" Margin="6" Click="SkillClicked"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>-->
        </ListBox>
        
        <DockPanel Margin="70,50,70,30" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
           <ContentControl Grid.Row="0" Grid.Column="1" 
                           Content="{Binding Source={StaticResource ListOfSkills}}"
                           ContentTemplate="{StaticResource SkillInfoDisplay}"/>

            <!-- TODOS
                * make the textBlock above a single unit so that I only need to reference that unit in the code behind
                * create a 'skill' definition on the MainWindow.xaml.cs constructor that will have the 4 fields above and test to see 
                if they can be copied on click
                * pull the skill definition out of MainWindow.xaml.cs into its own class
                * instead of name referencing the textBlock with the skill details, find a way to pass it as an object to the click function
            -->
        </DockPanel>
    </Grid>
</Window>
